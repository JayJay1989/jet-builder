name: Check and build images
on:
  schedule:
    - cron: '0 0 * * *'
jobs:
  check-versions:
    runs-on: ubuntu-latest
    outputs:
      image-matrix: ${{ steps.new_versions.outputs.image-matrix }}
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.9
        uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - id: new_versions
        name: Check versions
        run: |
          echo "::set-output name=image-matrix::{'include':$(python check_updates/check.py)}"

  build-image:
    needs: check-versions
    runs-on: ubuntu-latest
    if: ${{ fromJson(needs.check-versions.outputs.image-matrix)[0] }}
    strategy:
      matrix: ${{ fromJson(needs.check-versions.outputs.image-matrix) }}
    steps:
      - name: Build image
        run: |
          DOCKER_BUILDKIT=1 docker build -f projector-docker/Dockerfile --build-arg buildGradle=true --build-arg downloadUrl=${{ matrix.download }} -t ${{ matrix.image }}:${{ matrix.version }} -t ${{ matrix.image }}:latest .
      - name: Log into registry
        run: |
          echo "${{ secrets.REGISTRY_PASSWORD }}" | docker login hub.docker.com -u ${{ secrets.REGISTRY_USERNAME }} --password-stdin
      - name: Push image
        run: |
          docker push ${{ matrix.image }}:${{ matrix.version }}
          docker push ${{ matrix.image }}:latest