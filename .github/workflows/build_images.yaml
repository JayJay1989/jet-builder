name: Check and build images
on:
  schedule:
    - cron: '0 0 * * *'
  workflow_dispatch:
  
jobs:
  checkversions:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.9
        uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - id: new_versions
        name: Check versions
        run: |
          json=$(python check_updates/check.py)
          echo "matrix=$(jq -r -c . <<< "$json")"
          echo "matrix=$(jq -r -c . <<< "$json")" >> $GITHUB_OUTPUT
        env:
          REGISTRY_USERNAME: ${{ secrets.REGISTRY_USERNAME }}
          REGISTRY_PASSWORD: ${{ secrets.REGISTRY_PASSWORD }}
          REGISTRY: "https://dockerhub.buildserver.be"
    outputs:
      matrix: ${{ steps.new_versions.outputs.matrix }}
      
  build-image:
    needs: checkversions
    runs-on: ubuntu-latest
    strategy:
      matrix: 
        include: ${{ fromJson(needs.checkversions.outputs.matrix) }}
    steps:
      - name: Check
        env:
          MATRIX: ${{ toJSON(matrix) }}
        run: |
           echo "MATRIX: $(jq -r -c '.' <<< "$MATRIX")" 
      - name: Checkout repository and modules
        uses: actions/checkout@v3
        with:
          submodules: true
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}
          registry: ${{ secrets.REGISTRY }}
      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          file: projector-docker/Dockerfile
          build-args: |
            buildGradle=true
            downloadUrl=${{ matrix.download }}
          tags: |
            ${{ matrix.image }}:${{ matrix.version }}
            ${{ matrix.image }}:latest
          push: true
